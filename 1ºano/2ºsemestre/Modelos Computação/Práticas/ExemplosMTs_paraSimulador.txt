
// turingmachinesimulator.com
//=======================================
//  MT que reconhece L= {y2y |  y pertence a {0,1}* e |y|>=1}
//  Folha 10 - exercicio 3a 
//  Se for da linguagem, preserva a palavra 
//=======================================

name: Reconhece y2y para sequencia y em binario 
init: inicio
accept:  aceita


inicio,1 
proc1,B,>

inicio,0
proc0,A,>

proc1,0 
proc1,0,>

proc1,1
proc1,1,>

proc1,2
proc1d,2,>

proc1d,1
volta,U,<

proc1d,U
proc1d,U,>

proc1d,Z
proc1d,Z,>

proc0,0 
proc0,0,>

proc0,1
proc0,1,>

proc0,2
proc0d,2,>

proc0d,0
volta,Z,<

proc0d,U
proc0d,U,>

proc0d,Z
proc0d,Z,>

volta,Z 
volta,Z,<

volta,U 
volta,U,<

volta,2 
volta,2,<

volta,0 
volta,0,<

volta,1
volta,1,<

volta,A 
mais,Z,>

volta,B
mais,U,>

mais,2 
verif,2,>

mais,1
proc1,B,>

mais,0
proc0,A,>

verif,U 
verif,U,>

verif,Z 
verif,Z,>

verif,_
repor,_,<

repor,U
repor,1,<

repor,Z,
repor,0,<

repor,2
repor,2,<

repor,_
aceita,_,>


// turingmachinesimulator.com
//=======================================
//  MT que dada sequencia em binario (possivelmente com 0's
//  não significativos, calcula o quociente e o resto da divisão
//  por 2 e deixa  Q...R...  
//  Folha 10 - exercicio 4a
//=======================================

name: resposta 4a
init: zero
accept: aceita

zero,0
zero,_,>   

zero,1
naozero,1,>   

zero,_
escrQ0R,0,<

escrQ0R,_
escrQ0,R,<

escrQ0,_
escrQ,0,<

escrQ,_
aceita,Q,-

naozero,1
naozero,1,>   

naozero,0
naozero,0,>   

naozero,_
copiaR,_,<

copiaR,0
resto0,R,>

copiaR,1
resto1,R,>

resto0,_
insereQ,0,<

resto1,_
insereQ,1,<

insereQ,R
insereQ,R,<

insereQ,0
insereQ,0,<

insereQ,1
insereQ,1,<

insereQ,_
quoc0,_,>

quoc0,R
escrQ0,R,<

quoc0,1
escrQ,1,<


// turingmachinesimulator.com
//=======================================
//  MT que dadas duas sequências de 1's separadas por 0
// deixa na fita a maior
//  Folha 10 - exercicio 4b)
//=======================================

name: calcular o maximo
init: inicio
accept: fim

inicio,1
procPar,U,>

inicio,0
maxDireita,0,>

maxDireita,_
iguais,_,<

iguais,0
reporE,_,<

maxDireita,1
apaga1,1,<

apaga1,0
apagaU,1,<

apagaU,U
apagaU,1,<

apagaU,_
elimina1,_,>

elimina1,1
fim,_,>

procPar,0
procPar,0,>

procPar,1
procPar,1,>

procPar,_
cortaPar,_,<

cortaPar,1
volta,_,<

cortaPar,0
reporE,_,<    

volta,1
volta,1,<

volta,0
volta,0,<

volta,U
inicio,U,>

reporE,1
reporE,1,<

reporE,U
reporE,1,<

reporE,_
fim,_,>


//====================================
// turingmachinesimulator.com
//  MT que reconhece L= {0^n1^n2^n|  n>=0}
//  Exemplo da Aula Teorica
//  Se for da linguagem, preserva a palavra 
//=======================================


name: MT que reconhece  0n1n2n, n >= 0
init: inicio
accept: aceita

inicio,_
aceita,_,<

inicio,0
proc1,Z,>

proc1,0
proc1,0,>

proc1,1
proc2,U,>

proc2,1
proc2,1,>

proc2,2
procZ,B,<

procZ,B
procZ,B,<

procZ,U
procZ,U,<

procZ,1
procZ,1,<

procZ,0
procZ,0,<

procZ,Z
proc0,Z,>

proc0,0 
proc1,Z,>

proc0,U 
verif,U,>

verif,U 
verif,U,>

verif,B
verif,B,>

verif,_ 
repor,_,<

repor,B
repor,2,<

repor,U
repor,1,<

repor,Z
repor,0,<

repor,_
aceita,_,>

proc1,U
proc1,U,>

proc2,B
proc2,B,>


//=================================================================
// turingmachinesimulator.com
//   Reconhece L = {0^n1^n |  n>= 1}
//====================================================

name: MT para 0n1n, n >= 1
init: inicio
accept: aceita

inicio,0
proc1,_,>

proc1,0
proc1,0,>

proc1,1
proc1,1,>

proc1,_
apaga1,_,<

apaga1,1
proc0,_,<

proc0,0
proc0,0,<

proc0,1
proc0,1,<

proc0,_
apaga0,_,>

apaga0,0
proc1,_,>

apaga0,_
aceita,_,<
